/* Considera una lista/array de ovejas. 
Cada oveja tiene un nombre y un color. 
Haz una funci√≥n que devuelva una lista con todas las ovejas que sean de color rojo 
y que adem√°s su nombre contenga tanto las letras n Y a, sin importar el orden, 
las may√∫sculas o espacios.*/

const sheeps = [
	{ name: 'Noa', color: 'azul' },
	{ name: 'Euge', color: 'rojo' },
	{ name: 'Navidad', color: 'rojo' },
	{ name: 'Ki Na Ma', color: 'rojo' },
	{ name: 'AAAAAaaaaa', color: 'rojo' },
	{ name: 'Nnnnnnnn', color: 'rojo' },
];

const regex = /[n][a]+/gi;

const sheepFilter = (sheeps) => {
	return sheeps.filter(
		(sheep) => sheep.color === 'rojo' && regex.test(sheep.name)
	);
};
console.log('Sheeps:', sheepFilter(sheeps));

/** Te ha llegado una carta ‚úâÔ∏è con todos los regalos que debes preparar. El tema es que es una cadena de texto y es muy dif√≠cil de leer üò±. ¬°Menos mal que han puesto cada regalo separado por espacio! (aunque ten cuidado, porque al ser ni√±os, igual han colado m√°s espacios de la cuenta)

Encima nos hemos dado cuenta que algunas palabras vienen con un _ delante de la palabra, por ejemplo _playstation, que significa que est√° tachado y no se tiene que contar.

Transforma el texto a un objeto que contenga el nombre de cada regalo y las veces que aparece. Por ejemplo, si tenemos el texto:

const carta = 'bici coche bal√≥n _playstation bici coche peluche'.
Ten en cuenta que los tests pueden ser m√°s exhaustivos... üòù ¬°Cuidado con contar espacios vac√≠os!   */

const carta = 'bici coche bal√≥n _playstation bici coche peluche';

const arrayCarta = carta.trim().split(' ');
const cartaObject = {};

arrayCarta.forEach((item) => {
	if (!item.includes('_')) {
		cartaObject[item] = ++cartaObject[item] || 1;
	}
});

console.log(cartaObject);

/** El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas un l√≠o. üò±

Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().

Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran correctamente y que, adem√°s, no vayan vac√≠os.

¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los par√©ntesis...*/

function isValid(letter) {
	const regex = /[A-Za-z-√±√ë]+$/;
	const letters = letter.split('');
	let exit = false;
	const index = letters.findIndex((item) => item === '(');
	const closedIndex = letters.lastIndexOf(')');
	const subArray = letters.slice(index + 1, closedIndex);
	if (closedIndex - index >= 2) {
		exit = true;
	}
	for (let i in subArray) {
		if (!regex.test(subArray[i])) {
			exit = false;
		}
	}
	return exit;
}

const words = '(mu√±eca) consola bici';

console.log(isValid(words));
